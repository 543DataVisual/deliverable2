View(climate)
climate %>%
na.omit()
mean(climate$uncertainty)
mean(climate$uncertainty, na.rm = TRUE)
mean(climate$uncertainty, na.rm = TRUE)
min(climate$uncertainty, na.rm = TRUE)
max(climate$uncertainty, na.rm = TRUE)
mean(climate$uncertainty, na.rm = TRUE)
min(climate$uncertainty, na.rm = TRUE)
max(climate$uncertainty, na.rm = TRUE)
mode(climate$uncertainty, na.rm = TRUE)
mean(climate$uncertainty, na.rm = TRUE)
min(climate$uncertainty, na.rm = TRUE)
max(climate$uncertainty, na.rm = TRUE)
mode(climate$uncertainty)
mean(climate$uncertainty, na.rm = TRUE)
min(climate$uncertainty, na.rm = TRUE)
max(climate$uncertainty, na.rm = TRUE)
median(climate$uncertainty, na.rm = TRUE)
climate %>%
filter(
country == 'China'
& ! is.na(temp)
& year > 2000
) %>%
mutate(uncertain = ifelse(uncertainty > 1, 'Yes', 'No')) %>%
group_by(uncertain, city) %>%
summarise(
mean_temp = mean(temp)
) %>%
arrange(city) %>%
ggplot(aes(x = reorder(city, mean_temp), y = mean_temp, fill = uncertain)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(x = 'City', y = 'Mean Temperature (Celcius)', fill = NULL) +
theme_hc() +
scale_fill_hc()
climate %>%
filter(
country == 'China'
& ! is.na(temp)
) %>%
mutate(uncertain = ifelse(uncertainty > 1, 'Yes', 'No')) %>%
group_by(uncertain, city) %>%
summarise(
mean_temp = mean(temp)
) %>%
arrange(city) %>%
ggplot(aes(x = reorder(city, mean_temp), y = mean_temp, fill = uncertain)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(x = 'City', y = 'Mean Temperature (Celcius)', fill = NULL) +
theme_hc() +
scale_fill_hc()
climate %>%
filter(
country == 'China'
& ! is.na(temp)
) %>%
mutate(uncertain = ifelse(uncertainty > 1, 'Yes', 'No')) %>%
group_by(uncertain, city) %>%
summarise(
mean_temp = mean(temp)
) %>%
arrange(city) %>%
ggplot(aes(x = reorder(city, mean_temp), y = mean_temp, fill = uncertain)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(x = 'City', y = 'Mean Temperature (Celcius)', fill = NULL)
scale_fill_hc()
install.packages('ggthemes')
library(ggthemes)
climate %>%
filter(
country == 'China'
& ! is.na(temp)
) %>%
mutate(uncertain = ifelse(uncertainty > 1, 'Uncertain', 'Certain')) %>%
group_by(uncertain, city) %>%
summarise(
mean_temp = mean(temp)
) %>%
arrange(city) %>%
ggplot(aes(x = reorder(city, mean_temp), y = mean_temp, fill = uncertain)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(x = 'City', y = 'Mean Temperature (Celcius)', fill = NULL) +
theme_economist() +
scale_fill_economist()
climate %>%
filter(
country == 'China'
& ! is.na(temp)
) %>%
mutate(uncertain = ifelse(uncertainty > 1, 'Uncertain', 'Certain')) %>%
group_by(uncertain, city) %>%
summarise(
mean_temp = mean(temp)
) %>%
arrange(city) %>%
ggplot(aes(x = reorder(city, mean_temp), y = mean_temp, fill = uncertain)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(x = 'City', y = 'Mean Temperature (Celcius)', fill = NULL, title = 'Certainty in Temperature', subtitle = 'Cities in China') +
theme_economist() +
scale_fill_economist()
location='https://github.com/EvansDataScience/data/raw/master/'
file='eduwa.rda'
link=paste0(location,file)
#getting the data TABLE from the file in the cloud:
load(file=url(link))
location = 'https://github.com/543DataVisual/Deliverable1/raw/main/'
file = 'cleanedtractsfile3.csv'
link = paste0(location,file)
mydata = read.csv(link)
View(mydata)
View(mydata)
mydata %>%
ggplot(aes(x = total_non_english, fill = community_center)) +
geom_bar() +
View(mydata)
library(ggplot2)
library(tidyverse)
library(dplyr)
View(mydata)
ggplot(aes(x = total_non_english, y = per_cap_income, fill = community_center)) +
geom_bar() +
labs(x = 'Non English Speakers', y = 'Income')
mydata %>%
ggplot(aes(x = total_non_english, y = per_cap_income, fill = community_center)) +
+     geom_bar() +
+     labs(x = 'Non English Speakers', y = 'Income')
mydata %>% ggplot(aes(x = total_non_english, y = per_cap_income, fill = community_center)) + geom_bar() + labs (x = 'Community Center', y = 'Income')
mydata %>% ggplot(aes(x = total_non_english, fill = community_center)) + geom_bar() + labs (x = 'Community Center', y = 'Income')
mydata %>% ggplot(aes(y = total_non_english, fill = community_center)) + geom_bar() + labs (x = 'Community Center', y = 'Non English Speakers')
mydata %>% ggplot(aes(x = total_non_english, fill = community_center)) + geom_bar() + labs (x = 'Community Center', y = 'Non English Speakers')
location = 'https://github.com/543DataVisual/Deliverable1/raw/main/copy_tractassignments.csv'
location = 'https://github.com/543DataVisual/Deliverable1/raw/main/'
file = 'copy_tractassignments.csv'
link = paste0(location,file)
> DF = read.csv(link)
link = paste0(location,file)
DF = read.csv(link)
View(DF)
View(DF)
View(mydata)
DF %>% ggplot(aes(x = 'community_center', fill = ''))
DF %>% ggplot(aes(y = 'population', fill = 'sd_language1') + geom_bar() + labs (x = 'Community Centers', y = 'Population'))
DF %>% ggplot(aes(x = 'community_center', fill = 'sd_language1') + geom_bar() + labs (x = 'Community Centers', y = 'Population'))
table=table(DF$population,DF$sd_language)
DF2 <- DF[-c(33,34)]
View(dt)
View(DF2)
View(DF2)
DF2 <- DF[-c(33,34),]
table=table(DF2$population,DF2$sd_language)
View(HSB82)
View(airbnb)
airbnb %>% ggplot(aes(x = 'price', fill = 'room_type') + geom_bar() + labs(x = 'Price', y = 'Number of Rentals'))
airbnb %>% ggplot(aes(x = 'price', fill = 'room_type')) + geom_bar() + labs(x = 'Price', y = 'Number of Rentals')
airbnb %>% ggplot(aes(x = 'price', fill = 'room_type') + geom_bar() + labs(x = 'Price', y = 'Number of Rentals'))
airbnb %>% ggplot(aes(x = 'city', fill = 'bedrooms')) + geom_bar() + labs(x = 'City', y = 'Number of Rentals')
airbnb %>% ggplot(aes(x = 'address', fill = 'bedrooms')) + geom_bar() + labs(x = 'City', y = 'Number of Rentals')
airbnb %>% ggplot(aes(x = 'address', fill = 'room_type')) + geom_bar() + labs(x = 'City', y = 'Number of Rentals')
View(airbnb)
airbnb %>% ggplot(aes(x = 'address', fill = 'room_type')) + geom_bar() + labs(x = 'City', y = 'Number of Rentals')
View(airbnb_2)
View(airbnb)
View(bankruptcy)
View(bikeshare1)
View(airbnb)
View(climate)
View(airbnb)
location = 'https://github.com/543DataVisual/Deliverable1/raw/main/'
file = 'seattle_01.csv'
Link = paste0(location, file)
Airbnb = read.csv(Link)
View(Airbnb)
Airbnb %>% ggplot(aes(x = 'address', fill = 'room_type')) + geom_bar() + labs(x = 'City', y = 'Number of Rentals')
View(airbnb_2)
View(Airbnb)
View(airbnb)
View(airbnb)
View(airbnb)
View(airbnb)
View(airbnb_2)
View(Airbnb)
View(airbnb)
airbnb %>% ggplot(aes(x = address, fill = room_type)) + geom_bar() + labs(x = 'City', y = 'Count', fill = 'Room Type')
library(ggplot2)
library(dplyr)
airbnb %>% ggplot(aes(x = address, fill = room_type)) + geom_bar() + labs(x = 'City', y = 'Count', fill = 'Room Type')
airbnb %>% ggplot(aes(x = address, fill = bedrooms)) + geom_bar() + labs(x = 'City', y = 'Count', fill = 'Bedrooms')
airbnb %>% ggplot(aes(x = address, fill = room_type)) + geom_bar() + labs(x = 'City', y = 'Count', fill = 'Room Type')
# github link to data:
link="https://github.com/eScienceWinterSchool/PythonSession/raw/master/hdidemiso_plus.RDS"
#opening data
fileLink=url(link)
mergedData=readRDS(fileLink)
# knowing column names -------------
names(mergedData)
# data types-------------
str(mergedData)
## frequency table (I)-----------
(FTRegime=table(mergedData$Regimetype)) #counts
## frequency table (II)-----------
(FTRegimeShare=prop.table(table(mergedData$Regimetype))) #share
# compute statistics -------------
(mode=which.max(FTRegime))
(median=FTRegimeShare[cumsum(FTRegimeShare)>0.5][1])
# prepare plot -------------
barplot(FTRegimeShare,
main = "Democracy in the world (2021)",
xlab = "Regime Type",
ylab = "count of countries",
col='orange',
border='red')
summary(Filter(is.numeric, mergedData)) # all numeric indicators
# numBoxplot ------
mM_Positions=grep('mM',names(mergedData))
boxplot(mergedData[,mM_Positions],# all numeric indicators mM
las=2,
horizontal = T,
cex.axis=0.3,
col='lightblue',
border='red')
## Hipotheses and regressions -----
h1=formula(HumanDevelopmentIndex~Functioningofgovernment)
# subset ----
positions_mM=grep("mM", names(mergedData)) #easy way detect positions
dataToCluster= mergedData[,positions_mM]
row.names(dataToCluster)=mergedData$Countryname
# clustering with k-medoids -----
set.seed(111) # for replicability
# process
library(cluster)
distances=cluster::daisy(dataToCluster)
res.pam=cluster::pam(distances,4,cluster.only = F)
#saving result in subset
dataToCluster$pam=res.pam$cluster
# understanding cluster labels  ----
aggregate(data=dataToCluster,Overallscore_mM~pam,mean)
# recoding labels-----
oldvalues = c(3,1,2,4)
newvalues = ordered(c(1,2,3,4))  # Make this a factor
recoded=newvalues[ match(dataToCluster$pam, oldvalues) ]
# new column ----
mergedData$pam=recoded
# open file -----
# link in Github
linkMap="https://github.com/eScienceWinterSchool/R_Session/raw/main/worldMap.geojson"
# read in file
library(sf)
mapWorld=read_sf(linkMap)
# columns ------
names(mapWorld)
# quick look ------
head(mapWorld)
# structure ------
str(mapWorld)
# merge ----
mapWorld_Data=merge(mapWorld,mergedData,
by.x = 'ISO3',
by.y = 'iso3')
plot(mapWorld_Data['pam'],
border='grey50',
lwd=0.4,
main="Countries by HDI & Democracy",
sub='(missing values in light grey)')
# plot (II) ----
plot(st_geometry(mapWorld),
col = 'grey90',
main="Countries by HDI & Democracy",
sub='(missing values in light grey)',border = NA)
plot(mapWorld_Data['pam'],
border='grey50',
lwd=0.4,add=T)
install.packages("summarytools")
library(summarytools)
View(airbnb)
str(airbnb$rating)
library(tidyverse)
library(dplyr)
drop_na(airbnb)
str(airbnb$rating)
drop[2,]
airbnb <- airbnb[-2,]
airbnb <- airbnb[-81,]
airbnb <- airbnb[-96,]
airbnb <- airbnb[-98,]
airbnb <- airbnb[-97,]
airbnb <- airbnb[-133,]
airbnb <- airbnb[-141,]
df <- subset(airbnb, rating = 'NA')
View(airbnb)
View(df)
airbnb_clean <- subset(airbnb, rating != 'NA')
View(airbnb_clean)
is.na(airbnb_clean)
(airbnb_locrating=table(airbnb_clean$address,airbnb_clean$rating))
install.packages(magrittr)
library(magrittr)
(locrating_col=prop.table(airbnb_locrating, margin = 2) %>% round(.,3))
(cityratingDF = as.data.frame(airbnb_locrating))
as.data.frame(locrating_col)
cityratingDF$share = as.data.frame(locrating_col)[,3]
cityratingDF
names(cityratingDF)[1:3] = c("location","rating","counts")
cityratingDF
library(ggplot2)
basel = ggplot(data=cityratingDF,
aes(x=rating, y=share, fill=location))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked
View(airbnb_clean)
View(airbnb_clean)
(airbnb_locrating=table(airbnb_clean$rating,airbnb_clean$address))
install.packages(magrittr)
library(magrittr)
library(magrittr)
(locrating_col=prop.table(airbnb_locrating, margin = 2) %>% round(.,3))
(cityratingDF = as.data.frame(airbnb_locrating))
as.data.frame(locrating_col)
cityratingDF$share = as.data.frame(locrating_col)[,3]
cityratingDF
names(cityratingDF)[1:3] = c("rating","location","counts")
cityratingDF
library(ggplot2)
basel = ggplot(data=cityratingDF,
+ aes(x=location, y=share, fill=rating))
library(ggplot2)
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=rating))
> barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
library(ggplot2)
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=rating))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked
barstackedpct = barstacked + geom_text(size = 5,
position = position_stack(vjust = 0.5),
aes(label = percent(share,accuracy = 0.1)))
barstackedpct = barstackedpct + scale_y_continuous(labels = percent)
library(tidyverse)
barstackedpct = barstacked + geom_text(size = 5,
position = position_stack(vjust = 0.5),
aes(label = percent(share,accuracy = 0.1)))
barstackedpct = barstackedpct + scale_y_continuous(labels = percent)
barstackedpct = barstacked + geom_text(size = 5,
position = position_stack(vjust = 0.5),
aes(label = percent(share,accuracy = 0.1)))
barstackedpct = barstackedpct + scale_y_continuous(labels = "percent")
barstackedpct
barstackedpct = barstacked + geom_text(size = 5,
position = position_stack(vjust = 0.5),
aes(label = "percent"(share,accuracy = 0.1)))
barstackedpct = barstackedpct + scale_y_continuous(labels = "percent")
barstackedpct
barstackedpct = barstacked + geom_text(size = 5,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)))
barstackedpct = barstackedpct + scale_y_continuous(labels = percent)
library(scales)
barstackedpct = barstacked + geom_text(size = 5,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)))
barstackedpct = barstackedpct + scale_y_continuous(labels = percent)
barstackedpct
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=reorder(rating,share)))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked = barstacked + geom_text(size = 5,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)))
barstacked = barstacked + scale_y_continuous(labels = percent)
barstacked
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=reorder(rating,share)))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked = barstacked + geom_text(size = 3,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)))
barstacked = barstacked + scale_y_continuous(labels = percent)
barstacked
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=reorder(rating,share)))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked = barstacked + geom_text(size = 3,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.01)))
barstacked = barstacked + scale_y_continuous(labels = percent)
barstacked
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=reorder(rating,share)))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked = barstacked + geom_text(size = 2,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.01)))
barstacked = barstacked + scale_y_continuous(labels = percent)
barstacked
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=reorder(rating,share)))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked = barstacked + geom_text(size = 2,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)))
barstacked = barstacked + scale_y_continuous(labels = percent)
barstacked
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=reorder(rating,share)))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked = barstacked + geom_text(size = 2,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)) +
labs(title = 'WA Airbnb Ratings by Location'))
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=reorder(rating,share)))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked = barstacked + geom_text(size = 2,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)))
barstacked = barstacked + scale_y_continuous(labels = percent)
barstacked
title(main = 'WA Airbnb Ratings by Location',
cex.main = 3, col.main = 'black')
barstacked(x.y,main="")
plot(x.y,main="")
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=reorder(rating,share)))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked = barstacked + geom_text(size = 2,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)) +
title(main = 'WA Airbnb Ratings by Location',
cex.main = 3, col.main = 'black'))
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=reorder(rating,share)))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked = barstacked + geom_text(size = 2,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)))
barstacked = barstacked + scale_y_continuous(labels = percent)
barstacked
View(airbnb_2)
View(airbnb_clean)
View(airbnb_clean)
View(airbnb_clean)
View(airbnb_clean)
barstacked + labs(title= 'x')
library(ggplot2)
barstacked + labs(title= 'x')
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=reorder(rating,share)))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked = barstacked + geom_text(size = 2,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)))
barstacked = barstacked + scale_y_continuous(labels = percent)
plot(cars)
View(airbnb_clean)
(airbnb_locrating=table(airbnb_clean$rating,airbnb_clean$address))
library(magrittr)
(locrating_col=prop.table(airbnb_locrating, margin = 2) %>% round(.,3))
(cityratingDF = as.data.frame(airbnb_locrating))
as.data.frame(locrating_col)
cityratingDF$share = as.data.frame(locrating_col)[,3]
cityratingDF
names(cityratingDF)[1:3] = c("rating","location","counts")
cityratingDF
library(ggplot2)
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=rating))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked
library(tidyverse)
library(scales)
barstackedpct = barstacked + geom_text(size = 5,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)))
barstackedpct = barstackedpct + scale_y_continuous(labels = percent)
barstackedpct
(airbnb_locrating=table(airbnb_clean$rating,airbnb_clean$address))
library(magrittr)
(locrating_col=prop.table(airbnb_locrating, margin = 2) %>% round(.,3))
(cityratingDF = as.data.frame(airbnb_locrating))
as.data.frame(locrating_col)
cityratingDF$share = as.data.frame(locrating_col)[,3]
cityratingDF
names(cityratingDF)[1:3] = c("rating","location","counts")
cityratingDF
library(ggplot2)
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=rating))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked
library(tidyverse)
library(scales)
barstackedpct = barstacked + geom_text(size = 5,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)))
barstackedpct = barstackedpct + scale_y_continuous(labels = percent)
barstackedpct
basel = ggplot(data=cityratingDF,
aes(x=location, y=share, fill=reorder(rating,share)))
barstacked = basel + geom_bar(stat = 'identity', position = 'stack')
barstacked = barstacked + geom_text(size = 2,
position = position_stack(vjust = 0.5),
aes(label = percent (share,accuracy = 0.1)))
barstacked = barstacked + scale_y_continuous(labels = percent)
library(ggplot2)
barstacked + labs(title= 'x')
write.csv("airbnb_clean.csv")
write.csv("airbnb_clean.csv")
write.csv("airbnb_clean.csv")
setwd("~/Documents/GitHub/deliverable2")
write.csv("airbnb_clean.csv")
